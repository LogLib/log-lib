export const generateServerPrisma = (
  app: boolean,
  ts: boolean,
  auth: boolean,
  disableLocation: boolean,
  customLoc: boolean
) =>
  app
    ? `//generated by loglib
import { prismaAdapter } from "@loglib/prisma-adapter"
import { createServerRoutes } from "@loglib/next"
import { PrismaClient } from "@prisma/client"

const db = new PrismaClient()

export const { POST, GET } = createServerRoutes({
    adapter: prismaAdapter(db),
    ${
      auth
        ? `auth: {secret: process.env.LOGLIB_SECRET ${ts ? "as string" : ""}},`
        : ""
    }
    ${
      disableLocation
        ? "disableLocation: true,"
        : customLoc
        ? customLocTemp
        : ""
    }
})    
`
    : `//generated by loglib
import { prismaAdapter } from "@loglib/prisma-adapter"
import { createServer } from "@loglib/next"
import { PrismaClient } from "@prisma/client"

const db = new PrismaClient()

export default createServer({
    adapter: prismaAdapter(db),
    ${
      auth
        ? `auth: {secret: process.env.LOGLIB_SECRET ${ts ? "as string" : ""}},`
        : ""
    }
    ${
      disableLocation
        ? "disableLocation: true,"
        : customLoc
        ? customLocTemp
        : ""
    }
})

`;

export const generateServerSupabase = (
  app: boolean,
  ts: boolean,
  auth: boolean,
  disableLocation: boolean,
  customLoc: boolean
) =>
  app
    ? `//generated by loglib
import { supabaseAdapter } from "@loglib/supabase-adapter"
import { createServerRoutes } from "@loglib/next"
import { createClient } from "@supabase/supabase-js"

const supabase = createClient(process.env.SUPABASE_URL ${
        ts ? "as string" : ""
      }, process.env.SUPABASE_KEY ${ts ? "as string" : ""})
export const { POST, GET } = createServerRoutes({
    adapter: supabaseAdapter(supabase),
    ${
      auth
        ? `auth: {secret: process.env.LOGLIB_SECRET ${ts ? "as string" : ""}},`
        : ""
    }
    ${
      disableLocation
        ? "disableLocation: true,"
        : customLoc
        ? customLocTemp
        : ""
    }
})
`
    : `//generated by loglib
import { supabaseAdapter } from "@loglib/supabase-adapter"
import { createServer } from "@loglib/next"
import { createClient } from "@supabase/supabase-js"

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY)
export default createServer({
    adapter: supabaseAdapter(supabase),
    ${
      auth
        ? `auth: {secret: process.env.LOGLIB_SECRET ${ts ? "as string" : ""}},`
        : ""
    }
    ${
      disableLocation
        ? "disableLocation: true,"
        : customLoc
        ? customLocTemp
        : ""
    }    
})
`;
const customLocTemp = `async getLocation(ip) {
    //do your thing
    return {
        city: "city",
        country: "country",
    }
},`;
